name: FastAPI CI/CD

on:
  push:
    branches:
      - develop  # develop 브랜치에 푸시될 때만 실행

jobs:
  ci:
    runs-on: ubuntu-20.04
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: 1234
      DB_DATABASE: oz_fastapi
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Setup python environment
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Set timezone to KST
        run: |
          sudo rm /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

      - name: Start MySQL
        run: |
          sudo systemctl start mysql
          mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -uroot -proot
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd src
          poetry install

      - name: Run black
        run: |
          cd src
          poetry run black . --check

      - name: Run isort
        run: |
          cd src
          poetry run isort . --check --diff

      - name: Run Mypy
        run: |
          cd src
          poetry run mypy .

      - name: Run tests with pytest
        run: |
          cd src
          poetry run coverage run -m pytest
          poetry run coverage report -m
          poetry run coverage html

  deploy:
    runs-on: ubuntu-latest
    needs: ci  # CI 작업이 성공해야 실행
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no root@211.188.61.243 << 'EOF'
          cd backend/src
          git pull origin develop
          poetry shell
          poetry install
          kill -HUP $(pidof gunicorn)
          EOF
